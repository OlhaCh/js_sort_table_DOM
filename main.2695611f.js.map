{"version":3,"sources":["scripts/main.js"],"names":["tHead","document","querySelector","tBody","bodyRows","rows","convertToNumber","str","number","parseInt","slice","split","join","sortRows","arr","columnName","sortedRows","sort","a","b","cells","innerText","localeCompare","append","addEventListener","e","target"],"mappings":";AAAA,aA8CC,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EA5CD,IAAMA,EAAQC,SAASC,cAAc,SAC/BC,EAAQF,SAASC,cAAc,SAE/BE,EAAeD,EAAAA,EAAME,MAM3B,SAASC,EAAgBC,GAGhBC,OAFQC,SAASF,EAAIG,MAAM,GAAGC,MAAM,KAAKC,KAAK,KAKvD,SAASC,EAASC,EAAKC,GACjBC,IAAAA,EAAa,GAETD,OAAAA,GACD,IAAA,OACHC,EAAaF,EAAIG,KAAK,SAACC,EAAGC,GACxBD,OAAAA,EAAEE,MAAM,GAAGC,UAAUC,cAAcH,EAAEC,MAAM,GAAGC,aAEhD,MACG,IAAA,WACHL,EAAaF,EAAIG,KAAK,SAACC,EAAGC,GACxBD,OAAAA,EAAEE,MAAM,GAAGC,UAAUC,cAAcH,EAAEC,MAAM,GAAGC,aAEhD,MACG,IAAA,MACHL,EAAaF,EAAIG,KAAK,SAACC,EAAGC,GACxBV,OAAAA,SAASS,EAAEE,MAAM,GAAGC,WAClBZ,SAASU,EAAEC,MAAM,GAAGC,aAExB,MACG,IAAA,SACHL,EAAaF,EAAIG,KAAK,SAACC,EAAGC,GACxBb,OAAAA,EAAgBY,EAAEE,MAAM,GAAGC,WACzBf,EAAgBa,EAAEC,MAAM,GAAGC,aAKnClB,EAAMoB,OAANpB,MAAAA,EAAgBa,EAAAA,IAtClBhB,EAAMwB,iBAAiB,QAAS,SAAAC,GAC9BZ,EAAST,EAAUqB,EAAEC,OAAOL","file":"main.2695611f.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\r\n\r\nconst tHead = document.querySelector('thead');\r\nconst tBody = document.querySelector('tbody');\r\n\r\nconst bodyRows = [...tBody.rows];\r\n\r\ntHead.addEventListener('click', e => {\r\n  sortRows(bodyRows, e.target.innerText);\r\n});\r\n\r\nfunction convertToNumber(str) {\r\n  const number = parseInt(str.slice(1).split(',').join(''));\r\n\r\n  return number;\r\n}\r\n\r\nfunction sortRows(arr, columnName) {\r\n  let sortedRows = [];\r\n\r\n  switch (columnName) {\r\n    case 'Name':\r\n      sortedRows = arr.sort((a, b) =>\r\n        a.cells[0].innerText.localeCompare(b.cells[0].innerText)\r\n      );\r\n      break;\r\n    case 'Position':\r\n      sortedRows = arr.sort((a, b) =>\r\n        a.cells[1].innerText.localeCompare(b.cells[1].innerText)\r\n      );\r\n      break;\r\n    case 'Age':\r\n      sortedRows = arr.sort((a, b) =>\r\n        parseInt(a.cells[2].innerText)\r\n        - parseInt(b.cells[2].innerText)\r\n      );\r\n      break;\r\n    case 'Salary':\r\n      sortedRows = arr.sort((a, b) =>\r\n        convertToNumber(a.cells[3].innerText)\r\n        - convertToNumber(b.cells[3].innerText)\r\n      );\r\n      break;\r\n  }\r\n\r\n  tBody.append(...sortedRows);\r\n}\r\n"]}